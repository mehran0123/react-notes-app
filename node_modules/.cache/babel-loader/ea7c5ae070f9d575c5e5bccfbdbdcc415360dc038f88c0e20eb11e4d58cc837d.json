{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Techbay\\\\Desktop\\\\react apps\\\\react-notes-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"This is my first note\",\n    date: \"17/10/2023\"\n  }, {\n    id: nanoid(),\n    text: \"This is my 2nd note\",\n    date: \"17/10/2023\"\n  }, {\n    id: nanoid(),\n    text: \"This is my 3rd note\",\n    date: \"17/10/2023\"\n  }, {\n    id: nanoid(),\n    text: \"This is my fourth note\",\n    date: \"17/10/2023\"\n  }, {\n    id: nanoid(),\n    text: \"This is my 5th note\",\n    date: \"17/10/2023\"\n  }]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid,\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && \"dark-mode\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        addNoteFunction: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Tb6Fatqrov/Ws6HciGD80vTX404=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","nanoid","NotesList","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","className","children","handleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","addNoteFunction","handleDeleteNote","_c","$RefreshReg$"],"sources":["C:/Users/Techbay/Desktop/react apps/react-notes-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"This is my first note\",\n      date: \"17/10/2023\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my 2nd note\",\n      date: \"17/10/2023\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my 3rd note\",\n      date: \"17/10/2023\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my fourth note\",\n      date: \"17/10/2023\",\n    },\n    {\n      id: nanoid(),\n      text: \"This is my 5th note\",\n      date: \"17/10/2023\",\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid,\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          addNoteFunction={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}